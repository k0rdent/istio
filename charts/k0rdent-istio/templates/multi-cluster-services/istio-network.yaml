{{- if .Values.rootCA.enabled -}}
  {{- $common := include "istio.common.setup" . | fromJson -}}
  {{- $version := .Chart.Version | replace "." "-" -}}
  
  {{- $global := .Values.global | default dict }}
  {{- $customRegistry := "" }}
  {{- if and $global.registry (ne $global.registry "docker.io") }}
    {{- $customRegistry = $global.registry }}
  {{- end }}
apiVersion: k0rdent.mirantis.com/v1beta1
kind: MultiClusterService
metadata:
  name: {{ .Release.Name }}-network
spec:
  clusterSelector:
    matchLabels:
      k0rdent.mirantis.com/istio-role: member
    matchExpressions:
      - key: "k0rdent.mirantis.com/istio-gateway"
        operator: DoesNotExist
  serviceSpec:
    services:
      - name: cert-manager
        namespace: {{ .Release.Namespace }}
        template: {{ index .Values "cert-manager" "template" }}
        values: |
          crds:
            enabled: true
        {{- with $customRegistry }}
          image:
            repository: {{ . }}/jetstack/cert-manager-controller
          acmesolver:
            image:
              repository: {{ . }}/jetstack/cert-manager-acmesolver
          cainjector:
            image:
              repository: {{ . }}/jetstack/cert-manager-cainjector
          startupapicheck:
            image:
              repository: {{ . }}/jetstack/cert-manager-startupapicheck
          webhook:
            image:
              repository: {{ . }}/jetstack/cert-manager-webhook
        {{- end }}

      - name: k0rdent-istio
        namespace: {{ .Release.Namespace }}
        template: k0rdent-istio-{{ $version }}
        dependsOn:
          - name: cert-manager
            namespace: {{ .Release.Namespace }}
        values: |
{{ include "istio.service.values" (dict "customRegistry" $common.customRegistry) | indent 10 }}
{{- end -}}